@model Cooperate_mvc.Models.TaskModel

@{
    ViewBag.Title = "Utwórz zadanie";
}

<div class="framedContent">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Nowe zadanie</legend>

            <div class="editor-label">
                @Html.LabelFor(model => model.Title)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Deadline)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Deadline)
                @Html.ValidationMessageFor(model => model.Deadline)
            </div>

            <div class="editor-label">
                @Html.Label("Grupa")
            </div>
            <div class="editor-field">
                @Html.DropDownList(
            "Group_id",
            new SelectList(ViewBag.GroupsList, "Id", "Name"), new { @class = "chzn-select", id = "Group_id" }
        )
            </div>

            <div class="editor-label">
                @Html.Label("Użytkownik, do którego kierujemy zadanie")
            </div>
            <div class="editor-field">
                @Html.DropDownList(
            "UserTo_id",
            new SelectList(ViewBag.UsersList, "Id", "Login"), new { @class = "STOPchzn-select", id = "UserTo_id" }
        )
            </div>

            <div>
                <input type="submit" value="Utwórz" />
            </div>
        </fieldset>
    }
</div>

<script type="text/javascript">
    $("#Group_id").change(
    function () {
        loadLevelTwo(this);
    });
    loadLevelTwo($("#Group_id"));
    function loadLevelTwo(selectList) {
        var selectedId = $(selectList).val();
        $.ajax(
        {
            url: "@Url.Action("GetUsersByGroupId", "Tasks")",
            type: "POST",
            data: { id: selectedId },
            error: function (xhr) {
                alert("Prawdopodobnie wystąpił błąd, spróbuj ponownie...");
            }
        }).done(function (data) {
            $("#UserTo_id").children().each(function (index, option) {
                $(option).remove();
            });

            //blank option
            //var items = "<option selected value=\"\"></option>";
            var items = "";

            $.each(data,
                function () {
                    items += "<option value=\"" + this[0] + "\">" + this[1] + "</option>";
                });
            //debugger;
            $("#UserTo_id").html(items);
            //$("#UserTo_id").trigger("liszt:updated");
            //$("#UserTo_id").change();
        });
    }
</script>

@*<script type="text/javascript">
    $(".chzn-select").chosen();
</script>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")

    <script type="text/javascript">
        $(document).ready(function () {
            if (!Modernizr.inputtypes['date']) {
                $("#Deadline").datepicker({
                    changeMonth: true,
                    changeYear: true
                });
            }
        });
    </script>
}
