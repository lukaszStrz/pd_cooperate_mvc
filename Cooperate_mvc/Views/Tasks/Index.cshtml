@model IEnumerable<Cooperate_mvc.Models.TaskModel>

@{
    ViewBag.Title = "Index";
}

<div class="indexList">
    <h2>Zadania do wykonania</h2>
    @{
        var tasks = Model.Where(m => m.ToMe.Equals(true));
        if (tasks.ToArray().Length > 0)
        {
        <table>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreationDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Deadline)
                </th>
                <th>
                    @Html.DisplayName("Login")
                </th>
                <th>
                    @Html.DisplayName("Status")
                </th>
                <th>
                    @Html.DisplayName("Zmieniony")
                </th>
                <th>
                    @Html.DisplayName("Zmieniony przez")
                </th>
                <th>
                    @Html.DisplayName("Grupa")
                </th>
                <th></th>
            </tr>

            @foreach (var item in tasks)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreationDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Deadline)
                    </td>
                    <td>
                        @Html.ActionLink(item.UserFrom_login, "Details", "Account", new { login = item.UserFrom_login }, null)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TaskStatus_name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StatusLastChange)
                    </td>
                    <td>
                        @Html.ActionLink(item.User_login_statusChangedBy, "Details", "Account", new { login = item.User_login_statusChangedBy }, null)
                    </td>
                    <td>
                        @Html.ActionLink(item.Group_name, "Details", "Groups", new { id = item.Group_id }, null)
                    </td>
                    <td>
                        @Html.ActionLink("Edytuj", "Edit", new { id = item.Id }) |
            @Html.ActionLink("Wyświetl", "Details", new { id = item.Id }) |
            @Html.ActionLink("Usuń", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }

        </table>
        }
        else
        {
        <p>brak zadań</p>
        }
    }
</div>

<div class="indexList">
    <h2>Zlecone zadania</h2>
    @{
        var tasks2 = Model.Where(m => m.ToMe.Equals(false));
        if (tasks2.ToArray().Length > 0)
        {
        <table>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreationDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Deadline)
                </th>
                <th>
                    @Html.DisplayName("Login")
                </th>
                <th>
                    @Html.DisplayName("Status")
                </th>
                <th>
                    @Html.DisplayName("Zmieniony")
                </th>
                <th>
                    @Html.DisplayName("Zmieniony przez")
                </th>
                <th>
                    @Html.DisplayName("Grupa")
                </th>
                <th></th>
            </tr>

            @foreach (var item in tasks2)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreationDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Deadline)
                    </td>
                    <td>
                        @Html.ActionLink(item.UserTo_login, "Details", "Account", new { login = item.UserTo_login }, null)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TaskStatus_name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StatusLastChange)
                    </td>
                    <td>
                        @Html.ActionLink(item.User_login_statusChangedBy, "Details", "Account", new { login = item.User_login_statusChangedBy }, null)
                    </td>
                    <td>
                        @Html.ActionLink(item.Group_name, "Details", "Groups", new { id = item.Group_id }, null)
                    </td>
                    <td>
                        @Html.ActionLink("Edytuj", "Edit", new { id = item.Id }) |
            @Html.ActionLink("Wyświetl", "Details", new { id = item.Id }) |
            @Html.ActionLink("Usuń", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </table>
        }
        else
        {
        <p>brak zadań</p>
        }
    }
</div>
