@model Cooperate_mvc.Models.TaskModel

@{
    ViewBag.Title = "Szczegóły zadania";
}
<div class="framedContent">
    <fieldset>
        <legend>@Model.Title</legend>

        <div class="description">
            @Html.DisplayFor(modelItem => Model.Description)
        </div>
        <div class="info">
            Utworzono @Html.DisplayFor(modelItem => Model.CreationDate)
        </div>
        <div class="info">
            Termin wykonania: @Html.DisplayFor(modelItem => Model.Deadline)
        </div>

        @if (Model.ToMe)
        {
            <div class="info">
                Zlecone przez @Html.ActionLink(Model.UserFrom_login, "Details", "Account", new { login = Model.UserFrom_login }, null)
            </div>
        }
        else
        {
            <div class="info">
                Zlecone użytkownikowi @Html.ActionLink(Model.UserTo_login, "Details", "Account", new { login = Model.UserTo_login }, null)
            </div>
        }

        <div class="info">
            Aktualny status:
                    @using (Ajax.BeginForm("SubmitStatusChange", null, new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "StatusPartial", InsertionMode = InsertionMode.Replace }, new { style = "display: inline;" }))
                    {
                        @Html.HiddenFor(model => model.Id)
                        @Html.DropDownList("TaskStatus_id", new SelectList(ViewBag.StatusList, "TaskStatus_id", "TaskStatus_name"), new { @class = "NormalWidth", id = "TaskStatus_id", onchange = "$( '#SubmitAjax' ).click()" })
                        <input type="submit" id="SubmitAjax" style="display: none;" value="Submit" />
                    }
            <span id="StatusPartial">
                @Html.Partial("_TaskStatusPartial", new Cooperate_mvc.Models.TaskStatusPartialModel { Login = Model.User_login_statusChangedBy, LastChange = Model.StatusLastChange })
            </span>
        </div>
        <div class="info">
            Należy do grupy @Html.ActionLink(Model.Group_name, "Details", "Groups", new { id = Model.Group_id }, null)
        </div>
        <div class="links">
            @Html.ActionLink("Wróć do listy", "Index")
            @if (Model.UserFrom_login.Equals(User.Identity.Name))
            {
                @: |
                @Html.ActionLink("Edytuj", "Edit", new { id = Model.Id })
            }
        </div>
    </fieldset>
    <hr />
    <div id="Posts">
        @using (Ajax.BeginForm("AddComment", new AjaxOptions() { HttpMethod = "POST", OnComplete = "$('#PostText').val('');" }))
        {
            @Html.HiddenFor(model => model.Id)
            <textarea cols="20" id="PostText" name="PostText" rows="2"></textarea>
            <input type="submit" value="Dodaj komentarz" />
        }
        <div id="PostsList">
            @foreach (var post in ViewBag.Posts)
            {
                <span>
                    @Html.Partial("_Post", (Cooperate_mvc.Models.PostModel)post)
                </span>
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    var ws;

    function getEl(id) {
        return document.getElementById(id);
    }

    function createSpan(text) {
        var span = document.createElement('span');
        span.innerHTML = text;
        return span;
    }

    window.onload = function () {
        //var websocketDebug = $('websocketDebug');
        var comments = getEl('PostsList');
        var url = 'ws://localhost:58930/TasksSocketHandler.ashx?id=@Model.Id';
        ws = new WebSocket(url);

        //ws.onerror = function (e) {
        //    websocketDebug.appendChild(createSpan('Problem with connection: ' + e.message));
        //};

        //ws.onopen = function () {
        //    websocketDebug.innerHTML = 'Client connected <br/>';
        //};

        ws.onmessage = function (e) {
            comments.insertBefore(createSpan(e.data.toString()), comments.firstChild);

        };

        //ws.onclose = function () {
        //    websocketDebug.innerHTML = 'Closed connection!';
        //};

    };
</script>
